
# SELECT B.AUTHOR_ID, B.CATEGORY, (SUM(BS.SALES) * SUM(B.PRICE)) AS TOTAL_SALES
# FROM BOOK B JOIN BOOK_SALES BS ON B.BOOK_ID = BS.BOOK_ID
# WHERE BS.SALES_DATE LIKE '2022-01%'
# GROUP BY B.AUTHOR_ID, B.CATEGORY



SELECT AU.AUTHOR_ID, AU.AUTHOR_NAME, ID.CATEGORY, ID.TOTAL_SALES

FROM
(SELECT A.AUTHOR_ID, A.AUTHOR_NAME
FROM AUTHOR A JOIN BOOK B ON A.AUTHOR_ID = B.AUTHOR_ID
GROUP BY AUTHOR_ID) AU JOIN

(SELECT B.AUTHOR_ID, B.CATEGORY, SUM(BS.SALES * B.PRICE) AS TOTAL_SALES
FROM BOOK B JOIN BOOK_SALES BS ON B.BOOK_ID = BS.BOOK_ID
WHERE BS.SALES_DATE LIKE '2022-01%'
GROUP BY AUTHOR_ID, CATEGORY) ID ON AU.AUTHOR_ID = ID.AUTHOR_ID
ORDER BY ID.AUTHOR_ID, ID.CATEGORY DESC



# 문제 3)
# LV.4) 저자 별 카테고리 별 매출액 집계하기
# 저자명 별로 총 판매량의 합계(SUM_SALES)를 조회하는 SQL문을 작성해주세요.
# 정렬 순서는 SUM_SALES를 기준으로 내림차순 정렬해주세요.

# SELECT A.AUTHOR_ID, A.AUTHOR_NAME, B.CATEGORY, SUM(B.PRICE) AS TOTAL_SALES
# FROM BOOK B JOIN AUTHOR A ON B.AUTHOR_ID = A.AUTHOR_ID
# WHERE B.BOOK_ID IN (SELECT BOOK_ID FROM BOOK_SALES WHERE SALES_DATE LIKE '2022-01%')
# GROUP BY A.AUTHOR_NAME, B.CATEGORY
# ORDER BY A.AUTHOR_ID, B.CATEGORY DESC


# SELECT B.CATEGORY, (B.PRICE) * SUM(S.SALES) AS TOTAL_SALES
# FROM BOOK B JOIN BOOK_SALES S ON B.BOOK_ID = S.BOOK_ID
# WHERE SALES_DATE LIKE '2022-01%'
# GROUP BY B.CATEGORY