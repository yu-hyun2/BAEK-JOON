SELECT 
    A.REST_ID, 
    A.REST_NAME, 
    A.FOOD_TYPE, 
    A.FAVORITES, 
    A.ADDRESS, 
    ROUND(AVG(B.REVIEW_SCORE),2) AS SCORE
FROM REST_INFO A JOIN REST_REVIEW B ON A.REST_ID = B.REST_ID
WHERE A.ADDRESS LIKE '서울%'
GROUP BY A.REST_NAME
ORDER BY SCORE DESC, A.FAVORITES DESC;


# 틀린 답안 -> 메인 쿼리의 WHERE절에서 IS NOT NULL 처리 필요 
# SELECT REST_ID, REST_NAME, FOOD_TYPE, FAVORITES, ADDRESS, (
#     SELECT ROUND(AVG(B.REVIEW_SCORE),2)
#     FROM REST_REVIEW B 
#     WHERE A.REST_ID = B.REST_ID AND REVIEW_SCORE IS NOT NULL) AS SCORE
# FROM REST_INFO A
# WHERE ADDRESS LIKE '서울%'
# ORDER BY SCORE DESC, FAVORITES DESC;


# 정답이지만 비효율적임 
# SELECT
#     A.REST_ID,
#     A.REST_NAME,
#     A.FOOD_TYPE,
#     A.FAVORITES,
#     A.ADDRESS,
#     (
#         SELECT ROUND(AVG(B.REVIEW_SCORE), 2)
#         FROM REST_REVIEW B
#         WHERE A.REST_ID = B.REST_ID
#     ) AS SCORE
# FROM
#     REST_INFO A
# WHERE
#     A.ADDRESS LIKE '서울%'
#     AND EXISTS (
#         SELECT 1
#         FROM REST_REVIEW C
#         WHERE A.REST_ID = C.REST_ID
#             AND C.REVIEW_SCORE IS NOT NULL
#     )
# ORDER BY
#     SCORE DESC,
#     FAVORITES DESC;